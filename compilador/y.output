Grammar

    0 $accept: programa $end

    1 programa: inicioTabla TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones escritura_TS funciones escritura_main sentencias TOK_LLAVEDERECHA

    2 inicioTabla: ε

    3 escritura_TS: ε

    4 escritura_main: ε

    5 declaraciones: declaracion
    6              | declaracion declaraciones

    7 declaracion: clase identificadores TOK_PUNTOYCOMA

    8 clase: clase_escalar
    9      | clase_vector

   10 clase_escalar: tipo

   11 tipo: TOK_INT
   12     | TOK_BOOLEAN

   13 clase_vector: TOK_ARRAY tipo TOK_CORCHETEIZQUIERDO constante_entera TOK_CORCHETEDERECHO

   14 identificadores: identificador
   15                | identificador TOK_COMA identificadores

   16 funciones: funcion funciones
   17          | ε

   18 funcion: fn_declaration sentencias TOK_LLAVEDERECHA

   19 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion

   20 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR

   21 parametros_funcion: parametro_funcion resto_parametros_funcion
   22                   | ε

   23 resto_parametros_funcion: TOK_PUNTOYCOMA parametro_funcion resto_parametros_funcion
   24                         | ε

   25 parametro_funcion: clase idpf

   26 idpf: TOK_IDENTIFICADOR

   27 declaraciones_funcion: declaraciones
   28                      | ε

   29 sentencias: sentencia
   30           | sentencia sentencias

   31 sentencia: sentencia_simple TOK_PUNTOYCOMA
   32          | bloque

   33 sentencia_simple: asignacion
   34                 | lectura
   35                 | escritura
   36                 | retorno_funcion

   37 bloque: condicional
   38       | bucle

   39 asignacion: TOK_IDENTIFICADOR TOK_ASIGNACION exp
   40           | elemento_vector TOK_ASIGNACION exp

   41 elemento_vector: TOK_IDENTIFICADOR TOK_CORCHETEIZQUIERDO exp TOK_CORCHETEDERECHO

   42 condicional: if_exp sentencias TOK_LLAVEDERECHA
   43            | if_exp_sentencias TOK_ELSE TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

   44 if_exp_sentencias: if_exp sentencias TOK_LLAVEDERECHA

   45 if_exp: TOK_IF TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA

   46 bucle: while_exp sentencias TOK_LLAVEDERECHA

   47 while_exp: while exp TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA

   48 while: TOK_WHILE TOK_PARENTESISIZQUIERDO

   49 lectura: TOK_SCANF TOK_IDENTIFICADOR

   50 escritura: TOK_PRINTF exp

   51 retorno_funcion: TOK_RETURN exp

   52 exp: exp TOK_MAS exp
   53    | exp TOK_MENOS exp
   54    | exp TOK_DIVISION exp
   55    | exp TOK_ASTERISCO exp
   56    | TOK_MENOS exp
   57    | exp TOK_AND exp
   58    | exp TOK_OR exp
   59    | TOK_NOT exp
   60    | TOK_IDENTIFICADOR
   61    | constante
   62    | TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO
   63    | TOK_PARENTESISIZQUIERDO comparacion TOK_PARENTESISDERECHO
   64    | elemento_vector
   65    | idf_llamada_funcion TOK_PARENTESISIZQUIERDO lista_expresiones TOK_PARENTESISDERECHO

   66 idf_llamada_funcion: TOK_IDENTIFICADOR

   67 lista_expresiones: exp resto_lista_expresiones
   68                  | ε

   69 resto_lista_expresiones: TOK_COMA exp resto_lista_expresiones
   70                        | ε

   71 comparacion: exp TOK_IGUAL exp
   72            | exp TOK_DISTINTO exp
   73            | exp TOK_MENORIGUAL exp
   74            | exp TOK_MAYORIGUAL exp
   75            | exp TOK_MENOR exp
   76            | exp TOK_MAYOR exp

   77 constante: constante_logica
   78          | constante_entera

   79 constante_logica: TOK_TRUE
   80                 | TOK_FALSE

   81 constante_entera: TOK_CONSTANTE_ENTERA

   82 identificador: TOK_IDENTIFICADOR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOK_MAIN (258) 1
    TOK_INT (259) 11
    TOK_BOOLEAN (260) 12
    TOK_ARRAY (261) 13
    TOK_FUNCTION (262) 20
    TOK_IF (263) 45
    TOK_ELSE (264) 43
    TOK_WHILE (265) 48
    TOK_SCANF (266) 49
    TOK_PRINTF (267) 50
    TOK_RETURN (268) 51
    TOK_PUNTOYCOMA (269) 7 23 31
    TOK_COMA (270) 15 69
    TOK_PARENTESISIZQUIERDO (271) 19 45 48 62 63 65
    TOK_PARENTESISDERECHO (272) 19 45 47 62 63 65
    TOK_CORCHETEIZQUIERDO (273) 13 41
    TOK_CORCHETEDERECHO (274) 13 41
    TOK_LLAVEIZQUIERDA (275) 1 19 43 45 47
    TOK_LLAVEDERECHA (276) 1 18 42 43 44 46
    TOK_ASIGNACION (277) 39 40
    TOK_MAS (278) 52
    TOK_MENOS (279) 53 56
    TOK_DIVISION (280) 54
    TOK_ASTERISCO (281) 55
    TOK_AND (282) 57
    TOK_OR (283) 58
    TOK_NOT (284) 59
    TOK_IGUAL (285) 71
    TOK_DISTINTO (286) 72
    TOK_MENORIGUAL (287) 73
    TOK_MAYORIGUAL (288) 74
    TOK_MENOR (289) 75
    TOK_MAYOR (290) 76
    TOK_CONSTANTE_ENTERA <atributos> (291) 81
    TOK_TRUE (292) 79
    TOK_FALSE (293) 80
    TOK_IDENTIFICADOR <atributos> (294) 20 26 39 41 49 60 66 82
    NEG (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    programa (42)
        on left: 1
        on right: 0
    inicioTabla (43)
        on left: 2
        on right: 1
    escritura_TS (44)
        on left: 3
        on right: 1
    escritura_main (45)
        on left: 4
        on right: 1
    declaraciones (46)
        on left: 5 6
        on right: 1 6 27
    declaracion (47)
        on left: 7
        on right: 5 6
    clase (48)
        on left: 8 9
        on right: 7 25
    clase_escalar (49)
        on left: 10
        on right: 8
    tipo (50)
        on left: 11 12
        on right: 10 13 20
    clase_vector (51)
        on left: 13
        on right: 9
    identificadores (52)
        on left: 14 15
        on right: 7 15
    funciones (53)
        on left: 16 17
        on right: 1 16
    funcion (54)
        on left: 18
        on right: 16
    fn_declaration <atributos> (55)
        on left: 19
        on right: 18
    fn_name <atributos> (56)
        on left: 20
        on right: 19
    parametros_funcion (57)
        on left: 21 22
        on right: 19
    resto_parametros_funcion (58)
        on left: 23 24
        on right: 21 23
    parametro_funcion (59)
        on left: 25
        on right: 21 23
    idpf (60)
        on left: 26
        on right: 25
    declaraciones_funcion (61)
        on left: 27 28
        on right: 19
    sentencias (62)
        on left: 29 30
        on right: 1 18 30 42 43 44 46
    sentencia (63)
        on left: 31 32
        on right: 29 30
    sentencia_simple (64)
        on left: 33 34 35 36
        on right: 31
    bloque (65)
        on left: 37 38
        on right: 32
    asignacion (66)
        on left: 39 40
        on right: 33
    elemento_vector <atributos> (67)
        on left: 41
        on right: 40 64
    condicional (68)
        on left: 42 43
        on right: 37
    if_exp_sentencias <atributos> (69)
        on left: 44
        on right: 43
    if_exp <atributos> (70)
        on left: 45
        on right: 42 44
    bucle (71)
        on left: 46
        on right: 38
    while_exp <atributos> (72)
        on left: 47
        on right: 46
    while <atributos> (73)
        on left: 48
        on right: 47
    lectura (74)
        on left: 49
        on right: 34
    escritura (75)
        on left: 50
        on right: 35
    retorno_funcion (76)
        on left: 51
        on right: 36
    exp <atributos> (77)
        on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65
        on right: 39 40 41 45 47 50 51 52 53 54 55 56 57 58 59 62 67 69 71 72 73 74 75 76
    idf_llamada_funcion <atributos> (78)
        on left: 66
        on right: 65
    lista_expresiones (79)
        on left: 67 68
        on right: 65
    resto_lista_expresiones (80)
        on left: 69 70
        on right: 67 69
    comparacion <atributos> (81)
        on left: 71 72 73 74 75 76
        on right: 63
    constante <atributos> (82)
        on left: 77 78
        on right: 61
    constante_logica <atributos> (83)
        on left: 79 80
        on right: 77
    constante_entera <atributos> (84)
        on left: 81
        on right: 13 78
    identificador <atributos> (85)
        on left: 82
        on right: 14 15


State 0

    0 $accept: • programa $end

    $default  reduce using rule 2 (inicioTabla)

    programa     go to state 1
    inicioTabla  go to state 2


State 1

    0 $accept: programa • $end

    $end  shift, and go to state 3


State 2

    1 programa: inicioTabla • TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones escritura_TS funciones escritura_main sentencias TOK_LLAVEDERECHA

    TOK_MAIN  shift, and go to state 4


State 3

    0 $accept: programa $end •

    $default  accept


State 4

    1 programa: inicioTabla TOK_MAIN • TOK_LLAVEIZQUIERDA declaraciones escritura_TS funciones escritura_main sentencias TOK_LLAVEDERECHA

    TOK_LLAVEIZQUIERDA  shift, and go to state 5


State 5

    1 programa: inicioTabla TOK_MAIN TOK_LLAVEIZQUIERDA • declaraciones escritura_TS funciones escritura_main sentencias TOK_LLAVEDERECHA

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7
    TOK_ARRAY    shift, and go to state 8

    declaraciones  go to state 9
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 6

   11 tipo: TOK_INT •

    $default  reduce using rule 11 (tipo)


State 7

   12 tipo: TOK_BOOLEAN •

    $default  reduce using rule 12 (tipo)


State 8

   13 clase_vector: TOK_ARRAY • tipo TOK_CORCHETEIZQUIERDO constante_entera TOK_CORCHETEDERECHO

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7

    tipo  go to state 15


State 9

    1 programa: inicioTabla TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones • escritura_TS funciones escritura_main sentencias TOK_LLAVEDERECHA

    $default  reduce using rule 3 (escritura_TS)

    escritura_TS  go to state 16


State 10

    5 declaraciones: declaracion •
    6              | declaracion • declaraciones

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7
    TOK_ARRAY    shift, and go to state 8

    $default  reduce using rule 5 (declaraciones)

    declaraciones  go to state 17
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 11

    7 declaracion: clase • identificadores TOK_PUNTOYCOMA

    TOK_IDENTIFICADOR  shift, and go to state 18

    identificadores  go to state 19
    identificador    go to state 20


State 12

    8 clase: clase_escalar •

    $default  reduce using rule 8 (clase)


State 13

   10 clase_escalar: tipo •

    $default  reduce using rule 10 (clase_escalar)


State 14

    9 clase: clase_vector •

    $default  reduce using rule 9 (clase)


State 15

   13 clase_vector: TOK_ARRAY tipo • TOK_CORCHETEIZQUIERDO constante_entera TOK_CORCHETEDERECHO

    TOK_CORCHETEIZQUIERDO  shift, and go to state 21


State 16

    1 programa: inicioTabla TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones escritura_TS • funciones escritura_main sentencias TOK_LLAVEDERECHA

    TOK_FUNCTION  shift, and go to state 22

    $default  reduce using rule 17 (funciones)

    funciones       go to state 23
    funcion         go to state 24
    fn_declaration  go to state 25
    fn_name         go to state 26


State 17

    6 declaraciones: declaracion declaraciones •

    $default  reduce using rule 6 (declaraciones)


State 18

   82 identificador: TOK_IDENTIFICADOR •

    $default  reduce using rule 82 (identificador)


State 19

    7 declaracion: clase identificadores • TOK_PUNTOYCOMA

    TOK_PUNTOYCOMA  shift, and go to state 27


State 20

   14 identificadores: identificador •
   15                | identificador • TOK_COMA identificadores

    TOK_COMA  shift, and go to state 28

    $default  reduce using rule 14 (identificadores)


State 21

   13 clase_vector: TOK_ARRAY tipo TOK_CORCHETEIZQUIERDO • constante_entera TOK_CORCHETEDERECHO

    TOK_CONSTANTE_ENTERA  shift, and go to state 29

    constante_entera  go to state 30


State 22

   20 fn_name: TOK_FUNCTION • tipo TOK_IDENTIFICADOR

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7

    tipo  go to state 31


State 23

    1 programa: inicioTabla TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones escritura_TS funciones • escritura_main sentencias TOK_LLAVEDERECHA

    $default  reduce using rule 4 (escritura_main)

    escritura_main  go to state 32


State 24

   16 funciones: funcion • funciones

    TOK_FUNCTION  shift, and go to state 22

    $default  reduce using rule 17 (funciones)

    funciones       go to state 33
    funcion         go to state 24
    fn_declaration  go to state 25
    fn_name         go to state 26


State 25

   18 funcion: fn_declaration • sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 34
    TOK_WHILE          shift, and go to state 35
    TOK_SCANF          shift, and go to state 36
    TOK_PRINTF         shift, and go to state 37
    TOK_RETURN         shift, and go to state 38
    TOK_IDENTIFICADOR  shift, and go to state 39

    sentencias         go to state 40
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    if_exp_sentencias  go to state 47
    if_exp             go to state 48
    bucle              go to state 49
    while_exp          go to state 50
    while              go to state 51
    lectura            go to state 52
    escritura          go to state 53
    retorno_funcion    go to state 54


State 26

   19 fn_declaration: fn_name • TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55


State 27

    7 declaracion: clase identificadores TOK_PUNTOYCOMA •

    $default  reduce using rule 7 (declaracion)


State 28

   15 identificadores: identificador TOK_COMA • identificadores

    TOK_IDENTIFICADOR  shift, and go to state 18

    identificadores  go to state 56
    identificador    go to state 20


State 29

   81 constante_entera: TOK_CONSTANTE_ENTERA •

    $default  reduce using rule 81 (constante_entera)


State 30

   13 clase_vector: TOK_ARRAY tipo TOK_CORCHETEIZQUIERDO constante_entera • TOK_CORCHETEDERECHO

    TOK_CORCHETEDERECHO  shift, and go to state 57


State 31

   20 fn_name: TOK_FUNCTION tipo • TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 58


State 32

    1 programa: inicioTabla TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones escritura_TS funciones escritura_main • sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 34
    TOK_WHILE          shift, and go to state 35
    TOK_SCANF          shift, and go to state 36
    TOK_PRINTF         shift, and go to state 37
    TOK_RETURN         shift, and go to state 38
    TOK_IDENTIFICADOR  shift, and go to state 39

    sentencias         go to state 59
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    if_exp_sentencias  go to state 47
    if_exp             go to state 48
    bucle              go to state 49
    while_exp          go to state 50
    while              go to state 51
    lectura            go to state 52
    escritura          go to state 53
    retorno_funcion    go to state 54


State 33

   16 funciones: funcion funciones •

    $default  reduce using rule 16 (funciones)


State 34

   45 if_exp: TOK_IF • TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA

    TOK_PARENTESISIZQUIERDO  shift, and go to state 60


State 35

   48 while: TOK_WHILE • TOK_PARENTESISIZQUIERDO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 61


State 36

   49 lectura: TOK_SCANF • TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 62


State 37

   50 escritura: TOK_PRINTF • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 70
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 38

   51 retorno_funcion: TOK_RETURN • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 75
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 39

   39 asignacion: TOK_IDENTIFICADOR • TOK_ASIGNACION exp
   41 elemento_vector: TOK_IDENTIFICADOR • TOK_CORCHETEIZQUIERDO exp TOK_CORCHETEDERECHO

    TOK_CORCHETEIZQUIERDO  shift, and go to state 76
    TOK_ASIGNACION         shift, and go to state 77


State 40

   18 funcion: fn_declaration sentencias • TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 78


State 41

   29 sentencias: sentencia •
   30           | sentencia • sentencias

    TOK_IF             shift, and go to state 34
    TOK_WHILE          shift, and go to state 35
    TOK_SCANF          shift, and go to state 36
    TOK_PRINTF         shift, and go to state 37
    TOK_RETURN         shift, and go to state 38
    TOK_IDENTIFICADOR  shift, and go to state 39

    $default  reduce using rule 29 (sentencias)

    sentencias         go to state 79
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    if_exp_sentencias  go to state 47
    if_exp             go to state 48
    bucle              go to state 49
    while_exp          go to state 50
    while              go to state 51
    lectura            go to state 52
    escritura          go to state 53
    retorno_funcion    go to state 54


State 42

   31 sentencia: sentencia_simple • TOK_PUNTOYCOMA

    TOK_PUNTOYCOMA  shift, and go to state 80


State 43

   32 sentencia: bloque •

    $default  reduce using rule 32 (sentencia)


State 44

   33 sentencia_simple: asignacion •

    $default  reduce using rule 33 (sentencia_simple)


State 45

   40 asignacion: elemento_vector • TOK_ASIGNACION exp

    TOK_ASIGNACION  shift, and go to state 81


State 46

   37 bloque: condicional •

    $default  reduce using rule 37 (bloque)


State 47

   43 condicional: if_exp_sentencias • TOK_ELSE TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

    TOK_ELSE  shift, and go to state 82


State 48

   42 condicional: if_exp • sentencias TOK_LLAVEDERECHA
   44 if_exp_sentencias: if_exp • sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 34
    TOK_WHILE          shift, and go to state 35
    TOK_SCANF          shift, and go to state 36
    TOK_PRINTF         shift, and go to state 37
    TOK_RETURN         shift, and go to state 38
    TOK_IDENTIFICADOR  shift, and go to state 39

    sentencias         go to state 83
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    if_exp_sentencias  go to state 47
    if_exp             go to state 48
    bucle              go to state 49
    while_exp          go to state 50
    while              go to state 51
    lectura            go to state 52
    escritura          go to state 53
    retorno_funcion    go to state 54


State 49

   38 bloque: bucle •

    $default  reduce using rule 38 (bloque)


State 50

   46 bucle: while_exp • sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 34
    TOK_WHILE          shift, and go to state 35
    TOK_SCANF          shift, and go to state 36
    TOK_PRINTF         shift, and go to state 37
    TOK_RETURN         shift, and go to state 38
    TOK_IDENTIFICADOR  shift, and go to state 39

    sentencias         go to state 84
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    if_exp_sentencias  go to state 47
    if_exp             go to state 48
    bucle              go to state 49
    while_exp          go to state 50
    while              go to state 51
    lectura            go to state 52
    escritura          go to state 53
    retorno_funcion    go to state 54


State 51

   47 while_exp: while • exp TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 85
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 52

   34 sentencia_simple: lectura •

    $default  reduce using rule 34 (sentencia_simple)


State 53

   35 sentencia_simple: escritura •

    $default  reduce using rule 35 (sentencia_simple)


State 54

   36 sentencia_simple: retorno_funcion •

    $default  reduce using rule 36 (sentencia_simple)


State 55

   19 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO • parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7
    TOK_ARRAY    shift, and go to state 8

    $default  reduce using rule 22 (parametros_funcion)

    clase               go to state 86
    clase_escalar       go to state 12
    tipo                go to state 13
    clase_vector        go to state 14
    parametros_funcion  go to state 87
    parametro_funcion   go to state 88


State 56

   15 identificadores: identificador TOK_COMA identificadores •

    $default  reduce using rule 15 (identificadores)


State 57

   13 clase_vector: TOK_ARRAY tipo TOK_CORCHETEIZQUIERDO constante_entera TOK_CORCHETEDERECHO •

    $default  reduce using rule 13 (clase_vector)


State 58

   20 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR •

    $default  reduce using rule 20 (fn_name)


State 59

    1 programa: inicioTabla TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones escritura_TS funciones escritura_main sentencias • TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 89


State 60

   45 if_exp: TOK_IF TOK_PARENTESISIZQUIERDO • exp TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 90
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 61

   48 while: TOK_WHILE TOK_PARENTESISIZQUIERDO •

    $default  reduce using rule 48 (while)


State 62

   49 lectura: TOK_SCANF TOK_IDENTIFICADOR •

    $default  reduce using rule 49 (lectura)


State 63

   62 exp: TOK_PARENTESISIZQUIERDO • exp TOK_PARENTESISDERECHO
   63    | TOK_PARENTESISIZQUIERDO • comparacion TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 91
    idf_llamada_funcion  go to state 71
    comparacion          go to state 92
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 64

   56 exp: TOK_MENOS • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 93
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 65

   59 exp: TOK_NOT • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 94
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 66

   79 constante_logica: TOK_TRUE •

    $default  reduce using rule 79 (constante_logica)


State 67

   80 constante_logica: TOK_FALSE •

    $default  reduce using rule 80 (constante_logica)


State 68

   41 elemento_vector: TOK_IDENTIFICADOR • TOK_CORCHETEIZQUIERDO exp TOK_CORCHETEDERECHO
   60 exp: TOK_IDENTIFICADOR •
   66 idf_llamada_funcion: TOK_IDENTIFICADOR •

    TOK_CORCHETEIZQUIERDO  shift, and go to state 76

    TOK_PARENTESISIZQUIERDO  reduce using rule 66 (idf_llamada_funcion)
    $default                 reduce using rule 60 (exp)


State 69

   64 exp: elemento_vector •

    $default  reduce using rule 64 (exp)


State 70

   50 escritura: TOK_PRINTF exp •
   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 50 (escritura)


State 71

   65 exp: idf_llamada_funcion • TOK_PARENTESISIZQUIERDO lista_expresiones TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 101


State 72

   61 exp: constante •

    $default  reduce using rule 61 (exp)


State 73

   77 constante: constante_logica •

    $default  reduce using rule 77 (constante)


State 74

   78 constante: constante_entera •

    $default  reduce using rule 78 (constante)


State 75

   51 retorno_funcion: TOK_RETURN exp •
   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 51 (retorno_funcion)


State 76

   41 elemento_vector: TOK_IDENTIFICADOR TOK_CORCHETEIZQUIERDO • exp TOK_CORCHETEDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 102
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 77

   39 asignacion: TOK_IDENTIFICADOR TOK_ASIGNACION • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 103
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 78

   18 funcion: fn_declaration sentencias TOK_LLAVEDERECHA •

    $default  reduce using rule 18 (funcion)


State 79

   30 sentencias: sentencia sentencias •

    $default  reduce using rule 30 (sentencias)


State 80

   31 sentencia: sentencia_simple TOK_PUNTOYCOMA •

    $default  reduce using rule 31 (sentencia)


State 81

   40 asignacion: elemento_vector TOK_ASIGNACION • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 104
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 82

   43 condicional: if_exp_sentencias TOK_ELSE • TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

    TOK_LLAVEIZQUIERDA  shift, and go to state 105


State 83

   42 condicional: if_exp sentencias • TOK_LLAVEDERECHA
   44 if_exp_sentencias: if_exp sentencias • TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 106


State 84

   46 bucle: while_exp sentencias • TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 107


State 85

   47 while_exp: while exp • TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA
   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    TOK_PARENTESISDERECHO  shift, and go to state 108
    TOK_MAS                shift, and go to state 95
    TOK_MENOS              shift, and go to state 96
    TOK_DIVISION           shift, and go to state 97
    TOK_ASTERISCO          shift, and go to state 98
    TOK_AND                shift, and go to state 99
    TOK_OR                 shift, and go to state 100


State 86

   25 parametro_funcion: clase • idpf

    TOK_IDENTIFICADOR  shift, and go to state 109

    idpf  go to state 110


State 87

   19 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion • TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion

    TOK_PARENTESISDERECHO  shift, and go to state 111


State 88

   21 parametros_funcion: parametro_funcion • resto_parametros_funcion

    TOK_PUNTOYCOMA  shift, and go to state 112

    $default  reduce using rule 24 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 113


State 89

    1 programa: inicioTabla TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones escritura_TS funciones escritura_main sentencias TOK_LLAVEDERECHA •

    $default  reduce using rule 1 (programa)


State 90

   45 if_exp: TOK_IF TOK_PARENTESISIZQUIERDO exp • TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA
   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    TOK_PARENTESISDERECHO  shift, and go to state 114
    TOK_MAS                shift, and go to state 95
    TOK_MENOS              shift, and go to state 96
    TOK_DIVISION           shift, and go to state 97
    TOK_ASTERISCO          shift, and go to state 98
    TOK_AND                shift, and go to state 99
    TOK_OR                 shift, and go to state 100


State 91

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   62    | TOK_PARENTESISIZQUIERDO exp • TOK_PARENTESISDERECHO
   71 comparacion: exp • TOK_IGUAL exp
   72            | exp • TOK_DISTINTO exp
   73            | exp • TOK_MENORIGUAL exp
   74            | exp • TOK_MAYORIGUAL exp
   75            | exp • TOK_MENOR exp
   76            | exp • TOK_MAYOR exp

    TOK_PARENTESISDERECHO  shift, and go to state 115
    TOK_MAS                shift, and go to state 95
    TOK_MENOS              shift, and go to state 96
    TOK_DIVISION           shift, and go to state 97
    TOK_ASTERISCO          shift, and go to state 98
    TOK_AND                shift, and go to state 99
    TOK_OR                 shift, and go to state 100
    TOK_IGUAL              shift, and go to state 116
    TOK_DISTINTO           shift, and go to state 117
    TOK_MENORIGUAL         shift, and go to state 118
    TOK_MAYORIGUAL         shift, and go to state 119
    TOK_MENOR              shift, and go to state 120
    TOK_MAYOR              shift, and go to state 121


State 92

   63 exp: TOK_PARENTESISIZQUIERDO comparacion • TOK_PARENTESISDERECHO

    TOK_PARENTESISDERECHO  shift, and go to state 122


State 93

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   56    | TOK_MENOS exp •
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    $default  reduce using rule 56 (exp)


State 94

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   59    | TOK_NOT exp •

    $default  reduce using rule 59 (exp)


State 95

   52 exp: exp TOK_MAS • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 123
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 96

   53 exp: exp TOK_MENOS • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 124
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 97

   54 exp: exp TOK_DIVISION • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 125
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 98

   55 exp: exp TOK_ASTERISCO • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 126
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 99

   57 exp: exp TOK_AND • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 127
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 100

   58 exp: exp TOK_OR • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 128
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 101

   65 exp: idf_llamada_funcion TOK_PARENTESISIZQUIERDO • lista_expresiones TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    $default  reduce using rule 68 (lista_expresiones)

    elemento_vector      go to state 69
    exp                  go to state 129
    idf_llamada_funcion  go to state 71
    lista_expresiones    go to state 130
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 102

   41 elemento_vector: TOK_IDENTIFICADOR TOK_CORCHETEIZQUIERDO exp • TOK_CORCHETEDERECHO
   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    TOK_CORCHETEDERECHO  shift, and go to state 131
    TOK_MAS              shift, and go to state 95
    TOK_MENOS            shift, and go to state 96
    TOK_DIVISION         shift, and go to state 97
    TOK_ASTERISCO        shift, and go to state 98
    TOK_AND              shift, and go to state 99
    TOK_OR               shift, and go to state 100


State 103

   39 asignacion: TOK_IDENTIFICADOR TOK_ASIGNACION exp •
   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 39 (asignacion)


State 104

   40 asignacion: elemento_vector TOK_ASIGNACION exp •
   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 40 (asignacion)


State 105

   43 condicional: if_exp_sentencias TOK_ELSE TOK_LLAVEIZQUIERDA • sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 34
    TOK_WHILE          shift, and go to state 35
    TOK_SCANF          shift, and go to state 36
    TOK_PRINTF         shift, and go to state 37
    TOK_RETURN         shift, and go to state 38
    TOK_IDENTIFICADOR  shift, and go to state 39

    sentencias         go to state 132
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    if_exp_sentencias  go to state 47
    if_exp             go to state 48
    bucle              go to state 49
    while_exp          go to state 50
    while              go to state 51
    lectura            go to state 52
    escritura          go to state 53
    retorno_funcion    go to state 54


State 106

   42 condicional: if_exp sentencias TOK_LLAVEDERECHA •
   44 if_exp_sentencias: if_exp sentencias TOK_LLAVEDERECHA •

    TOK_ELSE  reduce using rule 44 (if_exp_sentencias)
    $default  reduce using rule 42 (condicional)


State 107

   46 bucle: while_exp sentencias TOK_LLAVEDERECHA •

    $default  reduce using rule 46 (bucle)


State 108

   47 while_exp: while exp TOK_PARENTESISDERECHO • TOK_LLAVEIZQUIERDA

    TOK_LLAVEIZQUIERDA  shift, and go to state 133


State 109

   26 idpf: TOK_IDENTIFICADOR •

    $default  reduce using rule 26 (idpf)


State 110

   25 parametro_funcion: clase idpf •

    $default  reduce using rule 25 (parametro_funcion)


State 111

   19 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO • TOK_LLAVEIZQUIERDA declaraciones_funcion

    TOK_LLAVEIZQUIERDA  shift, and go to state 134


State 112

   23 resto_parametros_funcion: TOK_PUNTOYCOMA • parametro_funcion resto_parametros_funcion

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7
    TOK_ARRAY    shift, and go to state 8

    clase              go to state 86
    clase_escalar      go to state 12
    tipo               go to state 13
    clase_vector       go to state 14
    parametro_funcion  go to state 135


State 113

   21 parametros_funcion: parametro_funcion resto_parametros_funcion •

    $default  reduce using rule 21 (parametros_funcion)


State 114

   45 if_exp: TOK_IF TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO • TOK_LLAVEIZQUIERDA

    TOK_LLAVEIZQUIERDA  shift, and go to state 136


State 115

   62 exp: TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO •

    $default  reduce using rule 62 (exp)


State 116

   71 comparacion: exp TOK_IGUAL • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 137
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 117

   72 comparacion: exp TOK_DISTINTO • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 138
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 118

   73 comparacion: exp TOK_MENORIGUAL • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 139
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 119

   74 comparacion: exp TOK_MAYORIGUAL • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 140
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 120

   75 comparacion: exp TOK_MENOR • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 141
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 121

   76 comparacion: exp TOK_MAYOR • exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 142
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 122

   63 exp: TOK_PARENTESISIZQUIERDO comparacion TOK_PARENTESISDERECHO •

    $default  reduce using rule 63 (exp)


State 123

   52 exp: exp • TOK_MAS exp
   52    | exp TOK_MAS exp •
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98

    $default  reduce using rule 52 (exp)


State 124

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   53    | exp TOK_MENOS exp •
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98

    $default  reduce using rule 53 (exp)


State 125

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   54    | exp TOK_DIVISION exp •
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    $default  reduce using rule 54 (exp)


State 126

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   55    | exp TOK_ASTERISCO exp •
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp

    $default  reduce using rule 55 (exp)


State 127

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   57    | exp TOK_AND exp •
   58    | exp • TOK_OR exp

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98

    $default  reduce using rule 57 (exp)


State 128

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   58    | exp TOK_OR exp •

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98

    $default  reduce using rule 58 (exp)


State 129

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   67 lista_expresiones: exp • resto_lista_expresiones

    TOK_COMA       shift, and go to state 143
    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 70 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 144


State 130

   65 exp: idf_llamada_funcion TOK_PARENTESISIZQUIERDO lista_expresiones • TOK_PARENTESISDERECHO

    TOK_PARENTESISDERECHO  shift, and go to state 145


State 131

   41 elemento_vector: TOK_IDENTIFICADOR TOK_CORCHETEIZQUIERDO exp TOK_CORCHETEDERECHO •

    $default  reduce using rule 41 (elemento_vector)


State 132

   43 condicional: if_exp_sentencias TOK_ELSE TOK_LLAVEIZQUIERDA sentencias • TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 146


State 133

   47 while_exp: while exp TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA •

    $default  reduce using rule 47 (while_exp)


State 134

   19 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA • declaraciones_funcion

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7
    TOK_ARRAY    shift, and go to state 8

    $default  reduce using rule 28 (declaraciones_funcion)

    declaraciones          go to state 147
    declaracion            go to state 10
    clase                  go to state 11
    clase_escalar          go to state 12
    tipo                   go to state 13
    clase_vector           go to state 14
    declaraciones_funcion  go to state 148


State 135

   23 resto_parametros_funcion: TOK_PUNTOYCOMA parametro_funcion • resto_parametros_funcion

    TOK_PUNTOYCOMA  shift, and go to state 112

    $default  reduce using rule 24 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 149


State 136

   45 if_exp: TOK_IF TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA •

    $default  reduce using rule 45 (if_exp)


State 137

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   71 comparacion: exp TOK_IGUAL exp •

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 71 (comparacion)


State 138

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   72 comparacion: exp TOK_DISTINTO exp •

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 72 (comparacion)


State 139

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   73 comparacion: exp TOK_MENORIGUAL exp •

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 73 (comparacion)


State 140

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   74 comparacion: exp TOK_MAYORIGUAL exp •

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 74 (comparacion)


State 141

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   75 comparacion: exp TOK_MENOR exp •

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 75 (comparacion)


State 142

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   76 comparacion: exp TOK_MAYOR exp •

    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 76 (comparacion)


State 143

   69 resto_lista_expresiones: TOK_COMA • exp resto_lista_expresiones

    TOK_PARENTESISIZQUIERDO  shift, and go to state 63
    TOK_MENOS                shift, and go to state 64
    TOK_NOT                  shift, and go to state 65
    TOK_CONSTANTE_ENTERA     shift, and go to state 29
    TOK_TRUE                 shift, and go to state 66
    TOK_FALSE                shift, and go to state 67
    TOK_IDENTIFICADOR        shift, and go to state 68

    elemento_vector      go to state 69
    exp                  go to state 150
    idf_llamada_funcion  go to state 71
    constante            go to state 72
    constante_logica     go to state 73
    constante_entera     go to state 74


State 144

   67 lista_expresiones: exp resto_lista_expresiones •

    $default  reduce using rule 67 (lista_expresiones)


State 145

   65 exp: idf_llamada_funcion TOK_PARENTESISIZQUIERDO lista_expresiones TOK_PARENTESISDERECHO •

    $default  reduce using rule 65 (exp)


State 146

   43 condicional: if_exp_sentencias TOK_ELSE TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA •

    $default  reduce using rule 43 (condicional)


State 147

   27 declaraciones_funcion: declaraciones •

    $default  reduce using rule 27 (declaraciones_funcion)


State 148

   19 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion •

    $default  reduce using rule 19 (fn_declaration)


State 149

   23 resto_parametros_funcion: TOK_PUNTOYCOMA parametro_funcion resto_parametros_funcion •

    $default  reduce using rule 23 (resto_parametros_funcion)


State 150

   52 exp: exp • TOK_MAS exp
   53    | exp • TOK_MENOS exp
   54    | exp • TOK_DIVISION exp
   55    | exp • TOK_ASTERISCO exp
   57    | exp • TOK_AND exp
   58    | exp • TOK_OR exp
   69 resto_lista_expresiones: TOK_COMA exp • resto_lista_expresiones

    TOK_COMA       shift, and go to state 143
    TOK_MAS        shift, and go to state 95
    TOK_MENOS      shift, and go to state 96
    TOK_DIVISION   shift, and go to state 97
    TOK_ASTERISCO  shift, and go to state 98
    TOK_AND        shift, and go to state 99
    TOK_OR         shift, and go to state 100

    $default  reduce using rule 70 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 151


State 151

   69 resto_lista_expresiones: TOK_COMA exp resto_lista_expresiones •

    $default  reduce using rule 69 (resto_lista_expresiones)
